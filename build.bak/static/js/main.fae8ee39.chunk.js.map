{"version":3,"sources":["pages/Home.js","component/CustomIcon.js","component/CustomNavBar.js","component/CustomCardItem1.js","pages/Mophology.js","pages/Shape.js","pages/Arrange.js","pages/Distribution.js","pages/Color.js","pages/AnatomicalSite.js","pages/Picture.js","pages/Result.js","App.js","serviceWorker.js","index.js"],"names":["Home","history","useHistory","className","src","alt","onClick","push","CustomIcon","props","name","width","size","CustomNavBar","icon","onLeftClick","route","rightContent","title","CustomCardItem1","image","text1","text2","Body","Item","Mophology","MophologyData","key","image_name","console","log","map","item","Shape","Arrange","Distribution","Color","AnatomicalSite","Picture","Result","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fae8ee39.chunk.js","sourcesContent":["import React from 'react'\nimport {Button} from 'antd-mobile';\nimport { useHistory } from \"react-router-dom\"; \n\n\nexport default function Home() {\n    const history = useHistory();\n    function handleClick() {\n        history.push(\"/mophology\");\n      }\n\n    return (\n        <div className=\"home-page\">\n            <img className=\"logo\" src=\"/images/logo.png\" alt=\"logo\"/>\n            <div className=\"center\">\n                <Button className=\"custom-button\" onClick={handleClick}>คัดกรองโรค</Button>\n                <Button className=\"custom-button\">ติดต่อสอบถาม</Button>\n            </div>\n            <div className=\"footer\">\n            จัดทำโดย<br/>\n            นักศึกษาคณะพยาบาลศาสตร์ ม.อ.ปัตตานี\n            </div>\n        </div>\n\n    )\n}\n","import React from 'react'\n\nexport default function CustomIcon(props) {\n    return (\n        <div>\n            <img src={\"/images/\"+props.name+\".png\"} width={props.size}/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useHistory } from \"react-router-dom\"; \nimport { NavBar, Icon } from 'antd-mobile';\nimport CustomIcon from './CustomIcon'\n\nexport default function CustomNavBar(props) {\n    const history = useHistory();\n\n  function onBack() {\n    history.push(props.route);\n  }\n\n  function goHome() {\n    history.push('/');\n  }\n    return (\n        <div>\n            <NavBar  \n                icon={<CustomIcon name=\"back-icon\" size=\"20\"/>} \n                onLeftClick={onBack}\n                className=\"navBar\"\n                rightContent={<div onClick={goHome}><CustomIcon name=\"home-icon\" size=\"20\"/></div>}\n                >\n                {props.title}\n                </NavBar>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Card, Flex } from \"antd-mobile\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function CustomCardItem1(props) {\n  const { image, text1, text2 } = props;\n  const history = useHistory();\n\n  function goNext() {\n    history.push(\"/shape\");\n  }\n  return (\n    <div>\n      <Card className=\"custom-card\" onClick={goNext}>\n        <Card.Body>\n          <Flex>\n            <Flex.Item>\n              <div className=\"card-img-icon\">\n                <img\n                  className=\"card-item-img-icon\"\n                  src={\"/images/\" + image + \"\"}\n                  width=\"20\"\n                  alt=\"\"\n                />\n              </div>\n            </Flex.Item>\n            <Flex.Item className=\"flex-img-icon\">\n              <div className=\"card-text-item1\">{text1}</div>\n              <div className=\"card-text-item2\">{text2}</div>\n            </Flex.Item>\n          </Flex>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CustomNavBar from \"./../component/CustomNavBar\";\nimport CustomCardItem1 from \"./../component/CustomCardItem1\";\nimport { WingBlank, WhiteSpace } from \"antd-mobile\";\n\nexport default function Mophology() {\n  const MophologyData = [\n    {\n      key: 1,\n      image_name: \"test_img.png\",\n      text1: \"EROSION\",\n      text2: \"รอยถลอกที่ชั้นหนังกำพร้า\"\n    },\n    {\n      key: 2,\n      image_name: \"test_img.png\",\n      text1: \"CRUST\",\n      text2: \"น้ำเหลืองแห้งร่วมกับเศษเซลล์\"\n    },\n    {\n      key: 3,\n      image_name: \"test_img.png\",\n      text1: \"PLAQUE\",\n      text2: \"คลำได้ ขนาดใหญ่กว่า 0.5 เซนติเมตร\"\n    },\n    {\n      key: 4,\n      image_name: \"test_img.png\",\n      text1: \"PUSTULE\",\n      text2: \"ตุ่มหนอง ขนาดเล็กกว่า 0.5 เซนติเมตร\"\n    },\n    {\n      key: 5,\n      image_name: \"test_img.png\",\n      text1: \"SCALE\",\n      text2: \"Desquamation\"\n    },\n    {\n      key: 6,\n      image_name: \"test_img.png\",\n      text1: \"PAPULE\",\n      text2: \"คลำได้ ขนาดเล็กกว่า 1 เซนติเมตร การแบ่งโรคขึ้นกับพื้นผิวของรอยโรค\"\n    },\n    {\n      key: 7,\n      image_name: \"test_img.png\",\n      text1: \"PATCH\",\n      text2: \"แบนราบ คลำไม่ได้ ขนาดมากกว่า 0.5 เซนติเมตร\"\n    },\n    {\n      key: 8,\n      image_name: \"test_img.png\",\n      text1: \"VESICLE\",\n      text2: \"ตุ่มน้ำ ขนาดเล็กกว่า 0.5 เซนติเมตร\"\n    },\n    {\n      key: 9,\n      image_name: \"test_img.png\",\n      text1: \"BULLA\",\n      text2: \"ตุ่มน้ำขนาดใหญ่กว่า 0.5 ซม. \"\n    },\n    {\n      key: 10,\n      image_name: \"test_img.png\",\n      text1: \"WHEAL\",\n      text2: \"การบวมผิวหนังชั้นหนังแท้ชั่วคราว รวมกับมีการแดงรอบ\"\n    },\n    {\n      key: 11,\n      image_name: \"test_img.png\",\n      text1: \"ABSCESS\",\n      text2: \"\"\n    }\n  ];\n\n  console.log(MophologyData);\n  return (\n    <div>\n      <CustomNavBar route=\"/\" title=\"Mophology\" />\n      <WingBlank size=\"lg\">\n        <WhiteSpace size=\"lg\" />\n        {MophologyData.map(item => (\n          <div key={item.key}>\n            <CustomCardItem1\n              image={item.image_name}\n              text1={item.text1}\n              text2={item.text2}\n            />\n            <WhiteSpace size=\"lg\" />\n          </div>\n        ))}\n      </WingBlank>\n    </div>\n  );\n}\n","import React from 'react'\nimport CustomNavBar from './../component/CustomNavBar'\n\nexport default function Shape() {\n    return (\n        <div>\n            <CustomNavBar route=\"/mophology\" title=\"Shape\"/>\n        </div>\n    )\n}\n","import React from 'react'\nimport CustomNavBar from './../component/CustomNavBar'\n\nexport default function Arrange() {\n  \n    return (\n        <div>\n            <CustomNavBar route=\"/shape\" title=\"Arrange\"/>\n        </div>\n    )\n}\n","import React from 'react'\nimport CustomNavBar from './../component/CustomNavBar'\n\nexport default function Distribution() {\n  \n    return (\n        <div>\n            <CustomNavBar route=\"/arrange\" title=\"Distribution\"/>\n        </div>\n    )\n}\n","import React from 'react'\nimport CustomNavBar from './../component/CustomNavBar'\n\nexport default function Color() {\n  \n    return (\n        <div>\n            <CustomNavBar route=\"/distribution\" title=\"Color\"/>\n        </div>\n    )\n}\n","import React from 'react'\nimport CustomNavBar from './../component/CustomNavBar'\n\nexport default function AnatomicalSite() {\n  \n    return (\n        <div>\n            <CustomNavBar route=\"/color\" title=\"Anatomical Site\"/>\n        </div>\n    )\n}\n","import React from 'react'\nimport CustomNavBar from './../component/CustomNavBar'\n\nexport default function Picture() {\n  \n    return (\n        <div>\n            <CustomNavBar route=\"/anatomicalsite\" title=\"เลือกรูปภาพที่ใกล้เคียงมากที่สุด\"/>\n        </div>\n    )\n}\n","import React from 'react'\nimport CustomNavBar from './../component/CustomNavBar'\n\nexport default function Result() {\n    return (\n        <div>\n            <CustomNavBar route=\"/picture\" title=\"ผลการวินิฉัยโรค\"/>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Home from './pages/Home';\nimport Mophology from './pages/Mophology';\nimport Shape from './pages/Shape';\nimport Arrange from './pages/Arrange';\nimport Distribution from './pages/Distribution';\nimport Color from './pages/Color';\nimport AnatomicalSite from './pages/AnatomicalSite';\nimport Picture from './pages/Picture';\nimport Result from './pages/Result';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/mophology\" exact component={Mophology}/>\n      <Route path=\"/shape\" exact component={Shape}/>\n      <Route path=\"/arrange\" exact component={Arrange}/>\n      <Route path=\"/distribution\" exact component={Distribution}/>\n      <Route path=\"/color\" exact component={Color}/>\n      <Route path=\"/anatomicalsite\" exact component={AnatomicalSite}/>\n      <Route path=\"/picture\" exact component={Picture}/>\n      <Route path=\"/result\" exact component={Result}/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}